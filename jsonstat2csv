#!/usr/bin/env node

const
  inout=require("./inout"),
  fs=require("fs"),
  argv=require("yargs")
    .version()
    .usage("Usage: $0 [input filename] [output filename]")
    .example("$0 oecd.json oecd.csv", "converts JSON-stat (oecd.json) into CSV (oecd.csv).")
    .boolean("s")
    .alias("n", "na")
    .describe("n", "Not available symbol (default, 'n/a')")
    .alias("c", "column")
    .describe("c", "Column separator (default, ',')")
    .alias("d", "decimal")
    .describe("d", "Decimal separator (default, '.')")
    .alias("s", "status")
    .describe("s", "Include status information")
    .alias("v", "vlabel")
    .describe("v", "Label of the value field (default is 'Value')")
    .alias("l", "slabel")
    .describe("l", "Label of the status field (default is 'Status')")
    .help("h")
    .alias("h", "help")
    .demandCommand(2)
    .argv
  ,
  input=argv._[0],
  vlabel=argv.vlabel || "Value",
  tbl=inout.ds(input).toTable({
    type: "array",
    vlabel: vlabel,
    slabel: argv.slabel || "Status",
    status: argv.status
  })
;

if(tbl===null){
  console.log(input + " does not containt valid JSON-stat.");
  process.exit(0);
}

let
  csv=[],
  na=argv.na || "n/a",
  delimiter=argv.column || ",",
  decimal=(delimiter===";") ?
    (argv.decimal || ",")
    :
    (argv.decimal || ".")
  ,
  vcol=tbl[0].indexOf(vlabel),
  i=1, len=tbl.length
;

if(delimiter==="\\t"){
  delimiter="\t";
}

tbl.forEach(function(r){
  r.forEach(function(c, i){
    if(i===vcol){
      if(c===null){
        r[i]='"' + na + '"';
      }else{
        if(decimal!=="."){
          r[i]=String(r[i]).replace(".", decimal);
        }
      }
    }else{
      r[i]='"' + r[i] + '"';
    }
  });
});

tbl.forEach(function(r){
  csv+=r.join(delimiter)+"\n";
});

inout.out(argv._[1], csv);
