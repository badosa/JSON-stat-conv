#!/usr/bin/env node

var
	fs=require("fs"),
	argv=require("yargs")
		.version()
		.usage("Usage:\n  $0 [input filename] [output filename]\n  $0 < [input] > [output] -t")
		.example("$0 oecd.json oecd.csv", "converts JSON-stat file oecd.json into a new file (oecd.csv) in the CSV format.")
		.example("$0 < oecd.json > oecd.csv -t", "converts JSON-stat stream oecd.json into a new stream (oecd.csv) in the CSV format.")
		.boolean("s")
		.alias("n", "na")
		.describe("n", "Not available symbol (default, 'n/a')")
		.alias("c", "column")
		.describe("c", "Column separator (default, ',')")
		.alias("d", "decimal")
		.describe("d", "Decimal separator (default, '.', unless column separator is ';', then default is ',')")
		.alias("s", "status")
		.describe("s", "Include status information")
		.alias("v", "vlabel")
		.describe("v", "Label of the value field (default is 'Value')")
		.alias("l", "slabel")
		.describe("l", "Label of the status field (default is 'Status')")
		.boolean("t")
		.alias("t", "stream")
		.describe("t", "Enable the stream interface")
		.help("h")
		.alias("h", "help")
		.argv
	,
	inout=require("./inout"),

	callback=function(contents){
		var
			vlabel=argv.vlabel || "Value",
			tbl=inout.dataset(contents).toTable({
				type: "array",
				vlabel: vlabel,
				slabel: argv.slabel || "Status",
				status: argv.status
			})
		;

		if(tbl===null){
			console.error("Error: The input does not containt valid JSON-stat.");
			process.exit(1);
		}

		var
			csv=[],
			na=argv.na || "n/a",
			delimiter=(argv.column===true || typeof argv.column==="undefined") ? "," : argv.column,
			decimal=(delimiter===";") ?
				(argv.decimal===true || typeof argv.decimal==="undefined" ? "," : argv.decimal)
				:
				(argv.decimal===true || typeof argv.decimal==="undefined" ? "." : argv.decimal)
			,
			vcol=tbl[0].indexOf(vlabel)
		;

		if(delimiter==="\\t"){
			delimiter="\t";
		}

		tbl.forEach(function(r, j){
			r.forEach(function(c, i){
				if(i===vcol && j){
					if(c===null){
						r[i]='"' + na + '"';
					}else{
						if(decimal!=="."){
							r[i]=String(r[i]).replace(".", decimal);
						}
					}
				}else{
					r[i]='"' + r[i] + '"';
				}
			});

			csv+=r.join(delimiter)+"\n";
		});

		return csv;
	}

inout.main(argv, callback, true);
