#!/usr/bin/env node

var
	argv=require("yargs")
		.version()
		.usage("Usage:\n  $0 [input filename] [output filename]\n  $0 < [input] > [output] -t")
		.example("$0 oecd.json oecd-object.json", "converts JSON-stat file oecd.json into a new file (oecd-object.json) containing an object.")
		.example("$0 < oecd.json > oecd-object.json -t", "converts JSON-stat stream oecd.json into a new stream (oecd-object.json) containing an object.")
		.boolean("s")
		.alias("s", "status")
		.describe("s", "Include status information")
		.alias("v", "vlabel")
		.describe("v", "Label of the value field (default is 'Value')")
		.alias("l", "slabel")
		.describe("l", "Label of the status field (default is 'Status')")
		.boolean("f")
		.alias("f", "fid")
		.describe("f", "Identify dimensions, value and status by ID instead of label")
		.boolean("c")
		.alias("c", "cid")
		.describe("c", "Identify categories by ID instead of label")
		.boolean("t")
		.alias("t", "stream")
		.describe("t", "Enable the stream interface")
		.help("h")
		.alias("h", "help")
		.argv
	,
	inout=require("./inout"),

	callback=function(contents){
		var
			tbl=inout.dataset(contents).toTable({
				type: "object",
				vlabel: argv.vlabel,
				slabel: argv.slabel,
				status: argv.status,
				content: argv.cid ? "id": "label",
				field: argv.fid ? "id": "label"
			})
		;

		if(tbl===null){
			console.error("Error: The input does not containt valid JSON-stat.");
			process.exit(1);
		}

		return tbl;
	}
;

inout.main(argv, callback);
